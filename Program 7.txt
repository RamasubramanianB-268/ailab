

    from sklearn.cluster import KMeans
    from sklearn import metrics
    import numpy as np
    import matplotlib.pyplot as plt
    import pandas as pd
    from sklearn.mixture import GaussianMixture

    data=pd.read_csv("clusterdata.csv")
    df1=pd.DataFrame(data)
    print(df1)
    f1 = df1['Distance_Feature'].values
    f2 = df1['Speeding_Feature'].values
    X=np.matrix(list(zip(f1,f2)))     # Example program 
    m=plt.plot(1)
    print(m)
    plt.subplot(511)
    plt.xlim([0, 100])
    plt.ylim([0, 50])
    plt.title('Dataset')
    plt.xlabel('distance_feature')
    plt.ylabel('speeding_feature')
    plt.scatter(f1,f2)


    colors = ['b', 'g', 'r']
    markers = ['o', 'v', 's']

    # create new plot and data for K- means algorithm
    plt.plot(2)
    ax=plt.subplot(513)
    kmeans_model = KMeans(n_clusters=3).fit(X)

    for i, l in enumerate(kmeans_model.labels_):
        fig1=plt.plot(f1[i], f2[i], color=colors[l],marker=markers[l])
        
    plt.xlim([0, 100])
    plt.ylim([0, 50])
    plt.title('K- Means')
    plt.ylabel('speeding_feature')
    plt.xlabel('distance_feature')

            

    # create new plot and data for gaussian mixture
    plt.plot(3)
    plt.subplot(515)
    gmm=GaussianMixture(n_components=3).fit(X)
    labels= gmm.predict(X)
    for i, l in enumerate(labels):
        plt.plot(f1[i], f2[i], color=colors[l], marker=markers[l])
    plt.xlim([0, 100])
    plt.ylim([0, 50])
    plt.title('Gaussian Mixture')
    plt.ylabel('speeding_feature')
    plt.xlabel('distance_feature')


    plt.show()

         Driver_ID  Distance_Feature  Speeding_Feature
    0   3423311935             71.24                28
    1   3423313212             52.53                25
    2   3423313724             64.54                27
    3   3423311373             55.69                22
    4   3423310999             54.58                25
    5   3423313857             41.91                10
    6   3423312432             58.64                20
    7   3423311434             52.02                 8
    8   3423311328             31.25                34
    9   3423312488             44.31                19
    10  3423311254             49.35                40
    11  3423312943             58.07                45
    12  3423312536             44.22                22
    13  3423311542             55.73                19
    14  3423312176             46.63                43
    15  3423314176             52.97                32
    16  3423314202             46.25                35
    17  3423311346             51.55                27
    18  3423310666             57.05                26
    19  3423313527             58.45                30
    20  3423312182             43.42                23
    21  3423313590             55.68                37
    22  3423312268             55.15                18
    [<matplotlib.lines.Line2D object at 0x00000118597B4760>]

    c:\users\sudeep\appdata\local\programs\python\python38\lib\site-packages\sklearn\utils\validation.py:593: FutureWarning: np.matrix usage is deprecated in 1.0 and will raise a TypeError in 1.2. Please convert to a numpy array with np.asarray. For more information see: https://numpy.org/doc/stable/reference/generated/numpy.matrix.html
      warnings.warn(
    c:\users\sudeep\appdata\local\programs\python\python38\lib\site-packages\sklearn\utils\validation.py:593: FutureWarning: np.matrix usage is deprecated in 1.0 and will raise a TypeError in 1.2. Please convert to a numpy array with np.asarray. For more information see: https://numpy.org/doc/stable/reference/generated/numpy.matrix.html
      warnings.warn(
    c:\users\sudeep\appdata\local\programs\python\python38\lib\site-packages\sklearn\utils\validation.py:593: FutureWarning: np.matrix usage is deprecated in 1.0 and will raise a TypeError in 1.2. Please convert to a numpy array with np.asarray. For more information see: https://numpy.org/doc/stable/reference/generated/numpy.matrix.html
      warnings.warn(

[]
